networks:
  openproject_net:
  ogna:
    external: true

volumes:
  db_data:
  openproject_data:

services:
  openproject:
    image: openproject/community:13.4.1-slim
    container_name: openproject
    restart: always
    expose:
      - "8080"
    environment:
      # Database configuration
      OPENPROJECT_RAILS__DATABASE: "postgres"
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@openprojectdb:5432/${POSTGRES_DB}"
      # Secret key base (should be persistent)

      # Optional: Email settings (use real SMTP in production)
      OPENPROJECT_EMAIL__DELIVERY_METHOD: "smtp"
      OPENPROJECT_EMAIL__SMTP__ADDRESS: "mail"
      OPENPROJECT_EMAIL__SMTP__PORT: "25"

      # when ssl
      #OPENPROJECT_RAILS__RELATIVE_URL_ROOT: ""
      #OPENPROJECT_HTTPS: "true"  # If Kong terminates SSL
    depends_on:
      openprojectdb:
        condition: service_healthy
    networks:
      - openproject_net
      - ogna
    volumes:
      - openproject_data:/var/openproject/assets
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openproject.rule=Host(`openproject.${OGNA_USER}.${OGNA_HOST}`)"
      - "traefik.http.routers.openproject.entrypoints=websecure"
      - "traefik.http.routers.openproject.tls.certresolver=hetzner"
      - "traefik.http.services.openproject.loadbalancer.server.port=8080"
      - "traefik.docker.network=ogna"

  openprojectdb:
    image: postgres:15
    hostname: openprojectdb
    container_name: openprojectdb
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - openproject_net
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
